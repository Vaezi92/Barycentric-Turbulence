clear all, clc
%% trainiing dataset according to DNS database: [Re = 2200, Retau = 149.45] 
%  [Re = 2600, Retau = 174.02], [Re = 2900, Retau = 190.54] and test dataset
%  is [Re = 3500, Retau = 225.19]

%%
clear, clc
%%%%%%%%  Read RSM as Low-fidelity (RSM) data and DNS as High-fidelity (PDNS)    
%%%%%%%%  data on lines y/H = 0.25, 0.75 and produce PreML Graphs for test   
%%%%%%%%  data Re = 3500
Re = 3500; rho = 1; H = 1; Ubulk = 0.482; mu = rho*Ubulk*H/Re; nu = mu/rho;
NumLines = 2;   % Number of Lines 
Iy=65; Iz=65; % number of cell centers in y and z direction 
[zH_line_RSM(:,1), U_line_RSM(:,1), V_line_RSM(:,1), W_line_RSM(:,1), CellRey_line_RSM(:,1), turbk_line_RSM(:,1), ...
 uu_line_RSM(:,1), vv_line_RSM(:,1), ww_line_RSM(:,1), uv_line_RSM(:,1), vw_line_RSM(:,1), uw_line_RSM(:,1), ....
 turbdiss_line_RSM(:,1), celVol_line_RSM(:,1), celwaldist_line_RSM(:,1), dUdx_line_RSM(:,1), ...
 dVdx_line_RSM(:,1), dWdx_line_RSM(:,1), dUdy_line_RSM(:,1), dVdy_line_RSM(:,1), dWdy_line_RSM(:,1), ...
 dUdz_line_RSM(:,1), dVdz_line_RSM(:,1), dWdz_line_RSM(:,1)]...
    = Functions.LineReadRSM(sprintf('.\\RANS-RSM\\Result-Re3500\\Re3500-yH025-RSM'));

[zH_line_RSM(:,2), U_line_RSM(:,2), V_line_RSM(:,2), W_line_RSM(:,2), CellRey_line_RSM(:,2), turbk_line_RSM(:,2), ...
 uu_line_RSM(:,2), vv_line_RSM(:,2), ww_line_RSM(:,2), uv_line_RSM(:,2), vw_line_RSM(:,2), uw_line_RSM(:,2), ....
 turbdiss_line_RSM(:,2), celVol_line_RSM(:,2), celwaldist_line_RSM(:,2), dUdx_line_RSM(:,2), ...
 dVdx_line_RSM(:,2), dWdx_line_RSM(:,2), dUdy_line_RSM(:,2), dVdy_line_RSM(:,2), dWdy_line_RSM(:,2), ...
 dUdz_line_RSM(:,2), dVdz_line_RSM(:,2), dWdz_line_RSM(:,2)]...
    = Functions.LineReadRSM(sprintf('.\\RANS-RSM\\Result-Re3500\\Re3500-yH075-RSM'));

[zH_line_PDNS(:,1), U_line_PDNS(:,1), V_line_PDNS(:,1), W_line_PDNS(:,1), uu_line_PDNS(:,1), uv_line_PDNS(:,1), ...
 uw_line_PDNS(:,1), vv_line_PDNS(:,1), vw_line_PDNS(:,1), ww_line_PDNS(:,1)]...
    = Functions.LineReadPDNS(sprintf('.\\Projected DNS\\Re3500-yH025-PDNS.txt'));

[zH_line_PDNS(:,2), U_line_PDNS(:,2), V_line_PDNS(:,2), W_line_PDNS(:,2), uu_line_PDNS(:,2), uv_line_PDNS(:,2), ...
 uw_line_PDNS(:,2), vv_line_PDNS(:,2), vw_line_PDNS(:,2), ww_line_PDNS(:,2)]...
    = Functions.LineReadPDNS(sprintf('.\\Projected DNS\\Re3500-yH075-PDNS.txt'));

%%
TauWall_line_RSM(1) = mu*U_line_RSM(end,1)/zH_line_RSM(end,1); UTau_line_RSM(1) = sqrt(TauWall_line_RSM(1)/rho);
TauWall_line_RSM(2) = mu*U_line_RSM(end,2)/zH_line_RSM(end,2); UTau_line_RSM(2) = sqrt(TauWall_line_RSM(2)/rho);
zHplus_line_RSM(:,1) = zH_line_RSM(:,1)*UTau_line_RSM(1)/nu; zHplus_line_RSM(:,2) = zH_line_RSM(:,2)*UTau_line_RSM(2)/nu;
Uplus_line_RSM(:,1) = U_line_RSM(:,1)/UTau_line_RSM(1); Uplus_line_RSM(:,2) = U_line_RSM(:,2)/UTau_line_RSM(2);
Reyturb_line_RSM(:,1) = (turbk_line_RSM(:,1).^2)./(nu*turbdiss_line_RSM(:,1));
Reyturb_line_RSM(:,2) = (turbk_line_RSM(:,2).^2)./(nu*turbdiss_line_RSM(:,2));
lturb_line_RSM(:,1) = (turbk_line_RSM(:,1).^(3/2))./turbdiss_line_RSM(:,1);
lturb_line_RSM(:,2) = (turbk_line_RSM(:,2).^(3/2))./turbdiss_line_RSM(:,2);
%zonalL_line_RSM(:,1) = 2.55.*zH_line_RSM(:,1).*(1-exp(0.016.*(zH_line_RSM(:,1).*sqrt(turbk_line_RSM(:,1))/nu)));

turbk_line_PDNS(:,1)= 0.5*(uu_line_PDNS(:,1)+vv_line_PDNS(:,1)+ww_line_PDNS(:,1));
turbk_line_PDNS(:,2)= 0.5*(uu_line_PDNS(:,2)+vv_line_PDNS(:,2)+ww_line_PDNS(:,2));
TauWall_line_PDNS(1) = mu*U_line_PDNS(end,1)/zH_line_PDNS(end,1); UTau_line_PDNS(1) = sqrt(TauWall_line_PDNS(1)/rho);
TauWall_line_PDNS(2) = mu*U_line_PDNS(end,2)/zH_line_PDNS(end,2); UTau_line_PDNS(2) = sqrt(TauWall_line_PDNS(2)/rho);
zHplus_line_PDNS(:,1) = zH_line_PDNS(:,1)*UTau_line_PDNS(1)/nu; zHplus_line_PDNS(:,2) = zH_line_PDNS(:,2)*UTau_line_PDNS(2)/nu;
Uplus_line_PDNS(:,1) = U_line_PDNS(:,1)/UTau_line_PDNS(1); Uplus_line_PDNS(:,2) = U_line_PDNS(:,2)/UTau_line_PDNS(2);
zonalL_line_PDNS(:,1) = 2.55.*zH_line_PDNS(:,1).*(1-exp(0.016.*(zH_line_PDNS(:,1).*sqrt(turbk_line_PDNS(:,1))/nu)));

%plot(uv_line_RSM(:,2)/(UTau_line_RSM(2)^2),zH_line_RSM(:,2),'*b')
%hold on
%plot(uv_line_PDNS(:,2)/(UTau_line_PDNS(2)^2),zH_line_PDNS(:,2),'-b')


[turbk_line_RSM(:,1), zetta_line_RSM(:,1), etta_line_RSM(:,1), Phi1_line_RSM(:,1), Phi2_line_RSM(:,1),...
 Phi3_line_RSM(:,1)] = Functions.ReyStrstoBary(length(uu_line_RSM(:,1)),...
 uu_line_RSM(:,1),uv_line_RSM(:,1),uw_line_RSM(:,1), vv_line_RSM(:,1), vw_line_RSM(:,1), ww_line_RSM(:,1));

[turbk_line_RSM(:,2), zetta_line_RSM(:,2), etta_line_RSM(:,2), Phi1_line_RSM(:,2), Phi2_line_RSM(:,2),...
 Phi3_line_RSM(:,2)] = Functions.ReyStrstoBary(length(uu_line_RSM(:,2)),...
 uu_line_RSM(:,2),uv_line_RSM(:,2),uw_line_RSM(:,2), vv_line_RSM(:,2), vw_line_RSM(:,2), ww_line_RSM(:,2));

[turbk_line_PDNS(:,1), zetta_line_PDNS(:,1), etta_line_PDNS(:,1), Phi1_line_PDNS(:,1), Phi2_line_PDNS(:,1),...
 Phi3_line_PDNS(:,1)] = Functions.ReyStrstoBary(length(uu_line_PDNS(:,1)),...
 uu_line_PDNS(:,1),uv_line_PDNS(:,1),uw_line_PDNS(:,1), vv_line_PDNS(:,1), vw_line_PDNS(:,1), ww_line_PDNS(:,1));

[turbk_line_PDNS(:,2), zetta_line_PDNS(:,2), etta_line_PDNS(:,2), Phi1_line_PDNS(:,2), Phi2_line_PDNS(:,2),...
 Phi3_line_PDNS(:,2)] = Functions.ReyStrstoBary(length(uu_line_PDNS(:,2)),...
 uu_line_PDNS(:,2),uv_line_PDNS(:,2),uw_line_PDNS(:,2), vv_line_PDNS(:,2), vw_line_PDNS(:,2), ww_line_PDNS(:,2));

%plot (zetta_line_RSM(:,1), etta_line_RSM(:,1), '*r')
%hold on
%plot (zetta_line_RSM(:,2), etta_line_RSM(:,2), '*y')
%hold on
%plot (zetta_line_PDNS(:,1), etta_line_PDNS(:,1), '-b')
%hold on
%plot (zetta_line_PDNS(:,2), etta_line_PDNS(:,2), '-b')
%hold on
%x = 0:0.05:0.5;
%y1 = sqrt(3)*x;
%plot(x,y1)
%hold on
%x = 0.5:0.05:1;
%y2 = (sqrt(3))*(1-x);
%plot(x,y2)
%hold on


%theta = 0:0.1:360;
%polar(Phi1_line_RSM(:,1),zH_line_RSM(:,1), '*r')
%hold on
%polar(Phi1_line_PDNS(:,1),zH_line_PDNS(:,1), '-r')
%hold on
%polar(Phi2_line_RSM(:,1),zH_line_RSM(:,1), '*b')
%hold on
%polar(Phi2_line_PDNS(:,1),zH_line_PDNS(:,1), '-b')
%hold on
%polar(Phi3_line_RSM(:,1),zH_line_RSM(:,1), '*g')
%hold on
%polar(Phi3_line_PDNS(:,1),zH_line_PDNS(:,1), '-g')
%hold on
%%
% Writing results of RSM data on lines y/H = 0.25 and 0.75
filename = sprintf('.\\ML-RSM-DNS comparison results\\line results\\RSM_line_yH025075.txt');
fileID = fopen(filename,'w');
fprintf(fileID,'%s\r\n','Variables = "z/H", "Uplus","u2/Utau^2","v2/Utau^2","w2/Utau^2", "uv/Utau^2", "k/Utau^2", "Wall yplus", "Reytub", "L-turb", "log2k", "zetta", "etta", "Phi1", "Phi2", "Phi3"');
fprintf(fileID,'%s\r\n','ZONE T = "RSM-y/H=0.25"')	
fprintf(fileID,'%f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\r\n',...
    [transpose(zH_line_RSM(:,1)); transpose(Uplus_line_RSM(:,1)); transpose(uu_line_RSM(:,1)./(UTau_line_RSM(1)^2)); transpose(vv_line_RSM(:,1)./(UTau_line_RSM(1)^2)); transpose(ww_line_RSM(:,1)./(UTau_line_RSM(1)^2)); transpose(uv_line_RSM(:,1)./(UTau_line_RSM(1)^2));...
     transpose(turbk_line_RSM(:,1)./(UTau_line_RSM(1)^2)); transpose(celwaldist_line_RSM(:,1).*UTau_line_RSM(1)/nu);...
     transpose(Reyturb_line_RSM(:,1)); transpose(lturb_line_RSM(:,1)); transpose(log2(turbk_line_RSM(:,1))); eval(transpose(zetta_line_RSM(:,1)));...
     eval(transpose(etta_line_RSM(:,1))); eval(transpose(Phi1_line_RSM(:,1))); eval(transpose(Phi2_line_RSM(:,1))); eval(transpose(Phi3_line_RSM(:,1)))]);

fprintf(fileID,'%s\r\n','ZONE T = "RSM-y/H=0.75"')	
fprintf(fileID,'%f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\r\n',...
    [transpose(zH_line_RSM(:,2)); transpose(Uplus_line_RSM(:,2)); transpose(uu_line_RSM(:,2)./(UTau_line_RSM(2)^2)) ;transpose(vv_line_RSM(:,2)./(UTau_line_RSM(2)^2)) ;transpose(ww_line_RSM(:,2)./(UTau_line_RSM(2)^2)) ;transpose(uv_line_RSM(:,2)./(UTau_line_RSM(2)^2));...
     transpose(turbk_line_RSM(:,2)./(UTau_line_RSM(2)^2)); transpose(celwaldist_line_RSM(:,2).*UTau_line_RSM(2)/nu);...
     transpose(Reyturb_line_RSM(:,2)); transpose(lturb_line_RSM(:,2)); transpose(log2(turbk_line_RSM(:,2))); eval(transpose(zetta_line_RSM(:,2)));...
     eval(transpose(etta_line_RSM(:,2))); eval(transpose(Phi1_line_RSM(:,2))); eval(transpose(Phi2_line_RSM(:,2))); eval(transpose(Phi3_line_RSM(:,2)))]);

 fclose(fileID);

% Writing results of PDNS data on lines y/H = 0.25 and 0.75
filename = sprintf('.\\ML-RSM-DNS comparison results\\line results\\PDNS_line_yH025075.txt');
fileID = fopen(filename,'w');
fprintf(fileID,'%s\r\n','Variables = "z/H", "Uplus","uu/Utau^2","vv/Utau^2","ww/Utau^2", "uv/Utau^2", "k/Utau^2", "log2k", "zetta", "etta", "Phi1", "Phi2", "Phi3"');
fprintf(fileID,'%s\r\n','ZONE T = "PDNS-y/H=0.25"')	
fprintf(fileID,'%f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\r\n',...
    [transpose(zH_line_PDNS(:,1)); transpose(Uplus_line_PDNS(:,1)); transpose(uu_line_PDNS(:,1)./(UTau_line_PDNS(1)^2)); transpose(vv_line_PDNS(:,1)./(UTau_line_PDNS(1)^2)); transpose(ww_line_PDNS(:,1)./(UTau_line_PDNS(1)^2)); transpose(uv_line_PDNS(:,1)./(UTau_line_PDNS(1)^2));...
     transpose(turbk_line_PDNS(:,1)./(UTau_line_PDNS(1)^2)); ...
     transpose(log2(turbk_line_PDNS(:,1))); eval(transpose(zetta_line_PDNS(:,1)));...
     eval(transpose(etta_line_PDNS(:,1))); eval(transpose(Phi1_line_PDNS(:,1))); eval(transpose(Phi2_line_PDNS(:,1))); eval(transpose(Phi3_line_PDNS(:,1)))]);

fprintf(fileID,'%s\r\n','ZONE T = "PDNS-y/H=0.75"')	
fprintf(fileID,'%f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\r\n',...
    [transpose(zH_line_PDNS(:,2)); transpose(Uplus_line_PDNS(:,2)); transpose(uu_line_PDNS(:,2)./(UTau_line_PDNS(2)^2));transpose(vv_line_PDNS(:,2)./(UTau_line_PDNS(2)^2)) ;transpose(ww_line_PDNS(:,2)./(UTau_line_PDNS(2)^2)) ;transpose(uv_line_PDNS(:,2)./(UTau_line_PDNS(2)^2));...
     transpose(turbk_line_PDNS(:,2)./(UTau_line_PDNS(2)^2)); ...
     transpose(log2(turbk_line_PDNS(:,2))); eval(transpose(zetta_line_PDNS(:,2)));...
     eval(transpose(etta_line_PDNS(:,2))); eval(transpose(Phi1_line_PDNS(:,2))); eval(transpose(Phi2_line_PDNS(:,2))); eval(transpose(Phi3_line_PDNS(:,2)))]);

 fclose(fileID);

%%
%  Read RSM as Low-fidelity data and Projected DNS as High-fidelity   
%  data on middle plane and produce secondary flow contour for      
%  RSM and DNS results of test dataset (Re = 3500) also
%  discrepancies and features for training data sets Re = 2200, 2600 and 
%  2900 and features for the test dataset Re = 3500 - Discrepanies and 
%  features should be written in a new files and all other data should
%  append to last file as new zones.

[yH_RSM(:,1), zH_RSM(:,1), U_RSM(:,1), V_RSM(:,1), W_RSM(:,1), CellRey_RSM(:,1), turbk_RSM(:,1), ...
 uu_RSM(:,1), vv_RSM(:,1), ww_RSM(:,1), uv_RSM(:,1), vw_RSM(:,1), uw_RSM(:,1),...
 turbdiss_RSM(:,1), celwaldist_RSM(:,1), dUdx_RSM(:,1), dVdx_RSM(:,1),...
 dWdx_RSM(:,1), dUdy_RSM(:,1), dVdy_RSM(:,1), dWdy_RSM(:,1), dUdz_RSM(:,1),...
 dVdz_RSM(:,1), dWdz_RSM(:,1)]...
    = Functions.ReadRSM(sprintf('.\\RANS-RSM\\Result-Re2200\\Re2200-middleplane-RSM'));

[yH_RSM(:,2), zH_RSM(:,2), U_RSM(:,2), V_RSM(:,2), W_RSM(:,2), CellRey_RSM(:,2), turbk_RSM(:,2), ...
 uu_RSM(:,2), vv_RSM(:,2), ww_RSM(:,2), uv_RSM(:,2), vw_RSM(:,2), uw_RSM(:,2),...
 turbdiss_RSM(:,2), celwaldist_RSM(:,2), dUdx_RSM(:,2), dVdx_RSM(:,2),...
 dWdx_RSM(:,2), dUdy_RSM(:,2), dVdy_RSM(:,2), dWdy_RSM(:,2), dUdz_RSM(:,2),...
 dVdz_RSM(:,2), dWdz_RSM(:,2)]...
    = Functions.ReadRSM(sprintf('.\\RANS-RSM\\Result-Re2600\\Re2600-middleplane-RSM'));

[yH_RSM(:,3), zH_RSM(:,3), U_RSM(:,3), V_RSM(:,3), W_RSM(:,3), CellRey_RSM(:,3), turbk_RSM(:,3), ...
 uu_RSM(:,3), vv_RSM(:,3), ww_RSM(:,3), uv_RSM(:,3), vw_RSM(:,3), uw_RSM(:,3),...
 turbdiss_RSM(:,3), celwaldist_RSM(:,3), dUdx_RSM(:,3), dVdx_RSM(:,3),...
 dWdx_RSM(:,3), dUdy_RSM(:,3), dVdy_RSM(:,3), dWdy_RSM(:,3), dUdz_RSM(:,3),...
 dVdz_RSM(:,3), dWdz_RSM(:,3)]...
    = Functions.ReadRSM(sprintf('.\\RANS-RSM\\Result-Re2900\\Re2900-middleplane-RSM'));

[yH_RSM(:,4), zH_RSM(:,4), U_RSM(:,4), V_RSM(:,4), W_RSM(:,4), CellRey_RSM(:,4), turbk_RSM(:,4), ...
 uu_RSM(:,4), vv_RSM(:,4), ww_RSM(:,4), uv_RSM(:,4), vw_RSM(:,4), uw_RSM(:,4),...
 turbdiss_RSM(:,4), celwaldist_RSM(:,4), dUdx_RSM(:,4), dVdx_RSM(:,4),...
 dWdx_RSM(:,4), dUdy_RSM(:,4), dVdy_RSM(:,4), dWdy_RSM(:,4), dUdz_RSM(:,4),...
 dVdz_RSM(:,4), dWdz_RSM(:,4)]...
    = Functions.ReadRSM(sprintf('.\\RANS-RSM\\Result-Re3500\\Re3500-middleplane-RSM'));


[yH_PDNS(:,1), zH_PDNS(:,1), U_PDNS(:,1), V_PDNS(:,1), W_PDNS(:,1),...
    uu_PDNS(:,1), uv_PDNS(:,1), uw_PDNS(:,1), vv_PDNS(:,1), vw_PDNS(:,1),...
    ww_PDNS(:,1)]...
    = Functions.ReadPDNS(sprintf('.\\Projected DNS\\Re2200-middleplane-PDNS.txt'));
turbk_PDNS(:,1)= 0.5*(uu_PDNS(:,1)+vv_PDNS(:,1)+ww_PDNS(:,1));

[yH_PDNS(:,2), zH_PDNS(:,2), U_PDNS(:,2), V_PDNS(:,2), W_PDNS(:,2),...
    uu_PDNS(:,2), uv_PDNS(:,2), uw_PDNS(:,2), vv_PDNS(:,2), vw_PDNS(:,2),...
    ww_PDNS(:,2)]...
    = Functions.ReadPDNS(sprintf('.\\Projected DNS\\Re2600-middleplane-PDNS.txt'));
turbk_PDNS(:,2)= 0.5*(uu_PDNS(:,2)+vv_PDNS(:,2)+ww_PDNS(:,2));

[yH_PDNS(:,3), zH_PDNS(:,3), U_PDNS(:,3), V_PDNS(:,3), W_PDNS(:,3),...
    uu_PDNS(:,3), uv_PDNS(:,3), uw_PDNS(:,3), vv_PDNS(:,3), vw_PDNS(:,3),...
    ww_PDNS(:,3)]...
    = Functions.ReadPDNS(sprintf('.\\Projected DNS\\Re2900-middleplane-PDNS.txt'));
turbk_PDNS(:,3)= 0.5*(uu_PDNS(:,3)+vv_PDNS(:,3)+ww_PDNS(:,3));

[yH_PDNS(:,4), zH_PDNS(:,4), U_PDNS(:,4), V_PDNS(:,4), W_PDNS(:,4),...
    uu_PDNS(:,4), uv_PDNS(:,4), uw_PDNS(:,4), vv_PDNS(:,4), vw_PDNS(:,4),...
    ww_PDNS(:,4)]...
    = Functions.ReadPDNS(sprintf('.\\Projected DNS\\Re3500-middleplane-PDNS.txt'));
turbk_PDNS(:,4)= 0.5*(uu_PDNS(:,4)+vv_PDNS(:,4)+ww_PDNS(:,4));

%%

[turbk_RSM(:,1), zetta_RSM(:,1), etta_RSM(:,1), Phi1_RSM(:,1), Phi2_RSM(:,1),...
 Phi3_RSM(:,1)] = Functions.ReyStrstoBary(length(uu_RSM(:,1)),...
 uu_RSM(:,1),uv_RSM(:,1),uw_RSM(:,1), vv_RSM(:,1), vw_RSM(:,1), ww_RSM(:,1));

[turbk_RSM(:,2), zetta_RSM(:,2), etta_RSM(:,2), Phi1_RSM(:,2), Phi2_RSM(:,2),...
 Phi3_RSM(:,2)] = Functions.ReyStrstoBary(length(uu_RSM(:,2)),...
 uu_RSM(:,2),uv_RSM(:,2),uw_RSM(:,2), vv_RSM(:,2), vw_RSM(:,2), ww_RSM(:,2));

[turbk_RSM(:,3), zetta_RSM(:,3), etta_RSM(:,3), Phi1_RSM(:,3), Phi2_RSM(:,3),...
 Phi3_RSM(:,3)] = Functions.ReyStrstoBary(length(uu_RSM(:,3)),...
 uu_RSM(:,3),uv_RSM(:,3),uw_RSM(:,3), vv_RSM(:,3), vw_RSM(:,3), ww_RSM(:,3));

[turbk_RSM(:,4), zetta_RSM(:,4), etta_RSM(:,4), Phi1_RSM(:,4), Phi2_RSM(:,4),...
 Phi3_RSM(:,4)] = Functions.ReyStrstoBary(length(uu_RSM(:,4)),...
 uu_RSM(:,4),uv_RSM(:,4),uw_RSM(:,4), vv_RSM(:,4), vw_RSM(:,4), ww_RSM(:,4));



[turbk_PDNS(:,1), zetta_PDNS(:,1), etta_PDNS(:,1), Phi1_PDNS(:,1), Phi2_PDNS(:,1),...
 Phi3_PDNS(:,1)] = Functions.ReyStrstoBary(length(uu_PDNS(:,1)),...
 uu_PDNS(:,1),uv_PDNS(:,1),uw_PDNS(:,1), vv_PDNS(:,1), vw_PDNS(:,1), ww_PDNS(:,1));

[turbk_PDNS(:,2), zetta_PDNS(:,2), etta_PDNS(:,2), Phi1_PDNS(:,2), Phi2_PDNS(:,2),...
 Phi3_PDNS(:,2)] = Functions.ReyStrstoBary(length(uu_PDNS(:,2)),...
 uu_PDNS(:,2),uv_PDNS(:,2),uw_PDNS(:,2), vv_PDNS(:,2), vw_PDNS(:,2), ww_PDNS(:,2));

[turbk_PDNS(:,3), zetta_PDNS(:,3), etta_PDNS(:,3), Phi1_PDNS(:,3), Phi2_PDNS(:,3),...
 Phi3_PDNS(:,3)] = Functions.ReyStrstoBary(length(uu_PDNS(:,3)),...
 uu_PDNS(:,3),uv_PDNS(:,3),uw_PDNS(:,3), vv_PDNS(:,3), vw_PDNS(:,3), ww_PDNS(:,3));

[turbk_PDNS(:,4), zetta_PDNS(:,4), etta_PDNS(:,4), Phi1_PDNS(:,4), Phi2_PDNS(:,4),...
 Phi3_PDNS(:,4)] = Functions.ReyStrstoBary(length(uu_PDNS(:,4)),...
 uu_PDNS(:,4),uv_PDNS(:,4),uw_PDNS(:,4), vv_PDNS(:,4), vw_PDNS(:,4), ww_PDNS(:,4));





Disc_log2k(:,:) = [log2(turbk_PDNS(:,1)) - log2(turbk_RSM(:,1)),...
                    log2(turbk_PDNS(:,2)) - log2(turbk_RSM(:,2)),...
                    log2(turbk_PDNS(:,3)) - log2(turbk_RSM(:,3)),...
                    log2(turbk_PDNS(:,4)) - log2(turbk_RSM(:,4))];
Disc_zetta(:,:) = [zetta_PDNS(:,1) - zetta_RSM(:,1),...
                   zetta_PDNS(:,2) - zetta_RSM(:,2),...
                   zetta_PDNS(:,3) - zetta_RSM(:,3),...
                   zetta_PDNS(:,4) - zetta_RSM(:,4)];
Disc_etta(:,:) = [etta_PDNS(:,1) - etta_RSM(:,1),...
                  etta_PDNS(:,2) - etta_RSM(:,2),...
                  etta_PDNS(:,3) - etta_RSM(:,3),...
                  etta_PDNS(:,4) - etta_RSM(:,4)];
Disc_Phi1(:,:) = [Phi1_PDNS(:,1) - Phi1_RSM(:,1),...
                  Phi1_PDNS(:,2) - Phi1_RSM(:,2),...
                  Phi1_PDNS(:,3) - Phi1_RSM(:,3),...
                  Phi1_PDNS(:,4) - Phi1_RSM(:,4)];
Disc_Phi2(:,:) = [Phi2_PDNS(:,1) - Phi2_RSM(:,1),...
                  Phi2_PDNS(:,2) - Phi2_RSM(:,2),...
                  Phi2_PDNS(:,3) - Phi2_RSM(:,3),...
                  Phi2_PDNS(:,4) - Phi2_RSM(:,4)];
Disc_Phi3(:,:) = [Phi3_PDNS(:,1) - Phi3_RSM(:,1),...
                  Phi3_PDNS(:,2) - Phi3_RSM(:,2),...
                  Phi3_PDNS(:,3) - Phi3_RSM(:,3),...
                  Phi3_PDNS(:,4) - Phi3_RSM(:,4)];

filename = sprintf('.\\ML-RSM-DNS comparison results\\Discrepancies of training data.txt');
fileID = fopen(filename,'w');
fprintf(fileID,'%f\t %f\t %f\t %f\t %f\t %f\r\n',...
    [transpose(Disc_log10k(:,1)); transpose(Disc_zetta(:,1));...
     transpose(Disc_etta(:,1)); transpose(Disc_Phi1(:,1));...
     transpose(Disc_Phi2(:,1)); transpose(Disc_Phi3(:,1))]);
fprintf(fileID,'%f\t %f\t %f\t %f\t %f\t %f\r\n',...
    [transpose(Disc_log10k(:,2)); transpose(Disc_zetta(:,2));...
     transpose(Disc_etta(:,2)); transpose(Disc_Phi1(:,2));...
     transpose(Disc_Phi2(:,2)); transpose(Disc_Phi3(:,2))]);
fprintf(fileID,'%f\t %f\t %f\t %f\t %f\t %f\r\n',...
    [transpose(Disc_log10k(:,3)); transpose(Disc_zetta(:,3));...
     transpose(Disc_etta(:,3)); transpose(Disc_Phi1(:,3));...
     transpose(Disc_Phi2(:,3)); transpose(Disc_Phi3(:,3))]);
fclose(fileID);


filename = sprintf('.\\ML-RSM-DNS comparison results\\plane results\\Pre-ML MiddlePlaneResults.txt');
fileID = fopen(filename,'w');
fprintf(fileID,'%s\r\n','Variables = "y/H", "z/H", "CrossVel", "V-Vel", "W-Vel", "log2k", "zetta", "etta", "Phi1", "Phi2", "Phi3"');
fprintf(fileID,'%s%d%s%d%s\r\n','ZONE T = "PDNS-Contours", I=',Iy,', J=',Iz,', DATAPACKING=POINT')	
fprintf(fileID,'%f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\r\n',...
    [transpose(yH_PDNS(:,4)); transpose(zH_PDNS(:,4)); transpose(sqrt(V_PDNS(:,4).^2+W_PDNS(:,4).^2)./Ubulk);...
     transpose(V_PDNS(:,4)./Ubulk); transpose(W_PDNS(:,4)./Ubulk); transpose(log2(turbk_PDNS(:,4)));...
     transpose(zetta_PDNS(:,4)); transpose(etta_PDNS(:,4)); transpose(Phi1_PDNS(:,4));...
     transpose(Phi2_PDNS(:,4)); transpose(Phi3_PDNS(:,4))]);
 
fprintf(fileID,'%s%d%s%d%s\r\n','ZONE T = "RSM-Contours", I=',Iy,', J=',Iz,', DATAPACKING=POINT')	
fprintf(fileID,'%f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\t %f\r\n',...
    [transpose(yH_RSM(:,4)); transpose(zH_RSM(:,4)); transpose(sqrt(V_RSM(:,4).^2+W_RSM(:,4).^2)./Ubulk);...
     transpose(V_RSM(:,4)./Ubulk); transpose(W_RSM(:,4)./Ubulk); transpose(log2(turbk_RSM(:,4)));...
     transpose(zetta_RSM(:,4)); transpose(etta_RSM(:,4)); transpose(Phi1_RSM(:,4)); transpose(Phi2_RSM(:,4));...
     transpose(Phi3_RSM(:,4))]);
fclose(fileID);

% transpose(V_PDNS(:,4)); transpose(W_PDNS(:,4));
%plot (zetta_RSM(:,4), etta_RSM(:,4), '*b')
%hold on
%plot (zetta_RSM(:,4), etta_RSM(:,4), '*r')
%hold on
%plot (zetta_PDNS(:,3), etta_PDNS(:,3), '*r')
%hold on

%x = 0:0.05:0.5;
%y1 = sqrt(3)*x;
%plot(x,y1)
%hold on
%x = 0.5:0.05:1;
%y2 = (sqrt(3))*(1-x);
%plot(x,y2)
%hold on


%%
%  Read predicted discrepancies by ML model and reconstruct the reynolds
%  stress for whole the field and write them in .ip file. Then run the 
%  field in solver without running reynolds stress and write
%  the data on middle plane and y/H = 0.25 and 0.75

% just one column for ML_Disc_log10k is considered base on 4th column of
% turb_RSM and turb_PDNS which are the test data

[ML_Disc_log10k(:,1), ML_Disc_zetta(:,1), ML_Disc_etta(:,1),...
    ML_Disc_Phi1(:,1), ML_Disc_Phi2(:,1), ML_Disc_Phi3(:,1)]...
    = Functions.ReadML(sprintf('.\\ML-RSM-DNS comparison results\\Discrepancies of test data.txt'));

% just one column for turb_ML is considered base on 4th column of turb_RSM
% which is the test data
turbk_ML(:,1) = turbk_RSM(:,4).* 2.^(ML_Disc_log2k(:,1));
zetta_ML(:,1) = ML_Disc_zetta(:,1) + zetta_RSM(:,4);
etta_ML(:,1) = ML_Disc_etta(:,1) + etta_RSM(:,4);
Phi1_ML(:,1) = ML_Disc_Phi1(:,1) + Phi1_RSM(:,4);
Phi2_ML(:,1) = ML_Disc_Phi2(:,1) + Phi2_RSM(:,4);
Phi3_ML(:,1) = ML_Disc_Phi3(:,1) + Phi3_RSM(:,4);

[uu_ML(:,1), uv_ML(:,1), uw_ML(:,1), vv_ML(:,1), vw_ML(:,1), ww_ML(:,1)]...
    = Functions.BarytoReyStrs(length(turbk_ML(:,1)),...
    turbk_ML(:,1), zetta_ML(:,1), etta_ML(:,1),...
    Phi1_ML(:,1), Phi2_ML(:,1), Phi3_ML(:,1));


%% 
%  Read the ML corrected data on middle plane and on lines y/H = 0.25 and
%  0.75. Then generate graphs according to DNS and RSM part and append to
%  the results as new zones.

%% 
%  Read discrepancies predicted by ML for data on middle plane and produce 
%  cross-seccorresponding graphs according to PreML for test data Re = 3500
%  without velocity. 














